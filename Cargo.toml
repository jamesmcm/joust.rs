[package]
name = "joust_rs"
version = "0.1.0"
authors = ["James McMurray <jamesmcm03@gmail.com>"]
edition = "2018"
license = "AGPL-3.0-or-later"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook", "wee_alloc"]

[dependencies]
wasm-bindgen = {version = "0.2", features = ["nightly"]}

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.2", optional = true }

[dependencies.web-sys]
version = "0.3.35"
features = [
  'CanvasRenderingContext2d',
  'CssStyleDeclaration',
  'Document',
  'DomRect',
  'DomRectReadOnly',
  'Element',
  'EventTarget',
  'HtmlCanvasElement',
  'HtmlElement',
  'KeyboardEvent',
  'MouseEvent',
  'Node',
  'Performance',
  'Window',
]


[dev-dependencies]
wasm-bindgen-test = "0.2"

[profile.release]
# Tell `rustc` to optimize for small code size.
# TODO: Investigate this at deploy time
opt-level = "s"
